---
layout: post
title: Your first cup of Lithium
tags: [php, php framework, lithium]
published: true
date: 2010-10-31 08:14
---
[![Lithium PHP 5.3 framework who loves RAD](http://farm3.static.flickr.com/2697/4205957193_e0e75b521a_m.jpg)](http://www.flickr.com/photos/harikt/4205957193/ "lithium_php_framework by K T Hari, on Flickr")So I hope all of you know that on 22nd July 2010, the [php.net](http://www.php.net/archive/2010.php#id2010-07-22-1fvf) announced the end of release cycle of 5.2 series ( "This release marks the end of the active support for PHP 5.2. Following this release the ***PHP 5.2 series will receive no further active bug maintenance***. ***Security*** fixes for PHP 5.2 ***might*** be published on a case by cases basis. All users of PHP 5.2 are encouraged to **upgrade to PHP 5.3**.' )  There are lots of beneficts when moving to PHP 5.3 series. 5.3 is completely rewritten core, improved speed and memory utilization. For developers you need to learn something more ![image](http://harikt.com/sites/all/libraries/fckeditor/editor/images/smiley/msn/wink_smile.gif)  . We have [namespaces](http://in3.php.net/manual/en/language.namespaces.php) , [Late Static Bindings](http://in3.php.net/manual/en/language.oop5.late-static-bindings.php) ,   [jump labels](http://in3.php.net/manual/en/control-structures.goto.php) (limited goto) , [Closures](http://in3.php.net/manual/en/functions.anonymous.php) (Lambda/Anonymous functions),  new magic methods, [\_\_callStatic](http://in3.php.net/manual/en/language.oop5.overloading.php#language.oop5.overloading.methods) and [\_\_invoke](http://in3.php.net/manual/en/language.oop5.magic.php#language.oop5.magic.invoke) ,  [Nowdoc](http://in3.php.net/manual/en/language.types.string.php#language.types.string.syntax.nowdoc) , [Constants](http://in3.php.net/manual/en/language.constants.syntax.php) can now be declared outside a class using the *const* keyword,   [ternary](http://in3.php.net/manual/en/language.operators.comparison.php#language.operators.comparison.ternary) operator now has a shorthand form: *?:*. , [Exceptions](http://in3.php.net/manual/en/language.exceptions.php) can now be nested ,  garbage collector for circular references has been added, and is enabled by default etc . You can look the [new features](http://in3.php.net/manual/en/migration53.new-features.php) added on php.net . So before you jump to start looking for a new 5.3 series framework  you have to know what the above are .  You can use the [migration guide](http://in3.php.net/migration53) on php.net to move your apps from 5.2 to 5.3 series . Some of the changes are [backward incompatible](http://in3.php.net/manual/en/migration53.incompatible.php) so will break ![image](http://harikt.com/sites/all/libraries/fckeditor/editor/images/smiley/msn/cry_smile.gif) .  Now the game starts , we have a bunch of frameworks started with PHP4 , PHP5 and now on 5.3 . Lithium is stable and many of the apps are working on top of it . Lithium has some core developers who are from Cake , Zend framework etc . And some of them were the leads of that framework. So its not brought to you by some one who don't have any knowledge in PHP or the community . So you have a reason to look right ? Also Lithium uses [PSR-0 Final Proposal](http://groups.google.com/group/php-standards) of the PHP Standards Working Group, so you can bring your favourite piece of cake from any other frameworks like Doctrine , Symfony , Zend or any other which follows it . Try not to select a framework which doesnot follow the proposal and after all its your wish ![image](http://harikt.com/sites/all/libraries/fckeditor/editor/images/smiley/msn/shades_smile.gif).  About the documentation: Ya , there is lots to do in the documentation part , but you can use the li3\_docs plugin to read all the doc block comments from the core . The core of the framework is almost compelely documented . You can see how it works from http://lithify.me/docs . The installation guide is here http://rad-dev.org/lithium/wiki/guides/installation . Its well written so I feel there is nothing I want to introduce here .  One you grabbed your copy you can download the li3\_docs plugin to libraries folder and add the line Libraries::add('li3\_docs'); at the end of config/bootstrap/library.php .  I hope you have already pointed your application to the webroot . If not some code below by [Ryan Mauger](http://www.rmauger.co.uk/) commonly known as [Bittarman](http://twitter.com/Bittarman) on the zf community will help you . I got some help from Bittarman, and which have helped a lot on my future projects . So I hope this will help you too .  So li3 is the command line tool which created models, controllers and does many of them .  Creating for project is as easy .I hope you have already installed and configured Lithium and li3 command line tool as [described](http://rad-dev.org/lithium/wiki/guides/installation). Lets see how and the directory structure look .  Oh simple right ? Your project is ready . Now point it changing the above name blog with hellolithium and to webroot and not public as in the previous gist. Some times this command may not work , as we expects . So the easiest way is also making a copy of the app folder and changing the name to hellolithium or the name you love . I was having some trouble but Nate helped me to resolve the issues on \#li3 on freenode . Though there are not a huge fans for li3 at present the support channel is superb . You will defnitely get some helping hands on it . Nate will also be publishing a tutorial soon , so I am also looking forward on it .  So one you have pointed to the webroot it will tell you to make the resources directory writeable. All you want to do is chmod 777 for the resources directory . Now you can change your database connections from the config/bootstrap/connections.php file. Lithium comes with support for mongodb as default. But you can also use other RDBMS like MySQL , Postgre etc or you can also use Doctrine ![image](http://harikt.com/sites/all/libraries/fckeditor/editor/images/smiley/msn/thumbs_up.gif) . So its your wish to use what .  Moving to command line once again how to create controllers, models etc .  $li3 create <name\> will be creating controllers and models .  li3 create -i is used to create on an interactive way . ie once you issued , you will be getting a set of questions  $ li3 create -i What would you like to create? (model/view/controller/test/mock)  \> model model could not be created.  I have not figured out why the error occurs. I know many of them are busy on their daily work . So I am looking into it , how it works and all . So you can see some other nice command line features soon on my blog.  Note : At the moment I am not a master in Li3, nor a contributor. So there may be errors from my part, sorry  and let me know if you see it and how I can resolve it .   
